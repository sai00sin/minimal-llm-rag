from textwrap import dedent

def build_prompt(question: str, contexts: list[str]):
    """
    RAG の「生成（G）」側で LLM に渡すプロンプトを構築する。
    - system メッセージ相当の規約文（役割・出力フォーマット）と、
      user メッセージ相当の質問・コンテキストを 1 つの文字列にまとめて返す
      （シンプルさ重視の最小実装）。

    Parameters
    ----------
    question : str
        ユーザの自然文の質問。
    contexts : list[str]
        検索で得たコンテキスト文（上位文書や抜粋）。[Doc1], [Doc2], ... と
        番号を振って LLM に根拠の出典を参照させる。

    Returns
    -------
    str
        LLM へ渡すプロンプト全文（system の規約 + user の質問/文脈）。
    """
    # ------------------------------------------------------------
    # コンテキスト整形:
    #   [Doc1]\n<本文>\n\n[Doc2]\n<本文>... のように連結する。
    #   - enumerate(..., start=1) ではなく i+1 としているのは
    #     既存コードに合わせた最小改変のため（意味は同じ）。
    #   - [DocN] というラベルを回答の「出典: [Doc?]」で参照させる。
    # ------------------------------------------------------------
    ctx = "\n\n".join(f"[Doc{i+1}]\n{c}" for i, c in enumerate(contexts))

    # ------------------------------------------------------------
    # system（役割と厳格な出力フォーマットの指示）:
    #   - dedent: インデントを外して可読性と余計な空白混入を防ぐ。
    #   - 箇条書き・不明時の挙動・出典の付与・出力フォーマットを明示。
    #   - 「以下のドキュメントのみを根拠」→ コンテキスト外の幻覚抑制。
    # ------------------------------------------------------------
    system = dedent("""
        あなたは社内ヘルプデスクのアシスタントです。
        以下のドキュメントのみを根拠に、箇条書きで簡潔に回答してください。
        不明な点は「わかりません」と書いてください。
        最後に出典として [Doc1] のように参照を付けてください。
        出力は次の形式に厳密に従ってください。

        回答:
        - ...
        - ...
        出典: [Doc?]
    """).strip()

    # ------------------------------------------------------------
    # user（質問と文脈の提示）:
    #   - LLM に「出力のみ」を求めることで余計な説明・前置きを抑制。
    #   - コンテキストは上で整えた [DocN] 付きの塊をそのまま渡す。
    # ------------------------------------------------------------
    user = f"質問: {question}\n\nコンテキスト:\n{ctx}\n\n出力のみを書いてください。"

    # ------------------------------------------------------------
    # 最終プロンプト:
    #   一つの文字列として返す。使用するクライアントが
    #   system/user 分離をサポートしない前提の最小構成。
    #   （チャットAPIを使う場合は system/user を別メッセージとして渡す実装に分離可）
    # ------------------------------------------------------------
    return system + "\n\n" + user
